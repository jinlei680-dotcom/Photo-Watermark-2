name: Create Release on Tag

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: macos-latest
    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Xcode/Swift
        run: |
          swift --version

      - name: Build (Release)
        run: |
          swift build -c release

      - name: Build minimal .app bundle
        run: |
          set -e
          APP_NAME="PhotoWatermark"
          APP_DIR="dist/${APP_NAME}.app"
          mkdir -p "${APP_DIR}/Contents/MacOS"
          mkdir -p "${APP_DIR}/Contents/Resources"
          # Basic Info.plist
          cat > "${APP_DIR}/Contents/Info.plist" << 'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key><string>PhotoWatermark</string>
            <key>CFBundleIdentifier</key><string>com.jinlei.photo-watermark</string>
            <key>CFBundleVersion</key><string>${{ github.ref_name }}</string>
            <key>CFBundleShortVersionString</key><string>${{ github.ref_name }}</string>
            <key>CFBundleExecutable</key><string>PhotoWatermark</string>
            <key>LSMinimumSystemVersion</key><string>10.15</string>
            <key>NSHighResolutionCapable</key><true/>
          </dict>
          </plist>
          PLIST
          # Copy built binary if exists
          if [ -f ".build/release/PhotoWatermark" ]; then
            cp .build/release/PhotoWatermark "${APP_DIR}/Contents/MacOS/PhotoWatermark"
          else
            echo "Built binary not found; failing" >&2
            exit 1
          fi

      - name: Package unsigned DMG
        run: |
          set -e
          APP_NAME="PhotoWatermark"
          DMG_NAME="${APP_NAME}-${{ github.ref_name }}-macos.dmg"
          TMP_DIR="dist/dmgroot"
          mkdir -p "$TMP_DIR"
          cp -R "dist/${APP_NAME}.app" "$TMP_DIR/${APP_NAME}.app"
          hdiutil create -volname "${APP_NAME}" -srcfolder "$TMP_DIR" -ov -format UDZO "dist/${DMG_NAME}"

      - name: Package artifact
        run: |
          mkdir -p dist
          if [ -f ".build/release/PhotoWatermark" ]; then
            cp .build/release/PhotoWatermark dist/
            cd dist
            zip -r PhotoWatermark-${{ github.ref_name }}-macos.zip PhotoWatermark
          else
            # fallback: zip repository snapshot (heavy but reliable)
            cd ..
            zip -r dist/PhotoWatermark-${{ github.ref_name }}-macos.zip . -x "*.git*" -x "*.DS_Store"
          fi

      - name: Create GitHub Release and upload artifact
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: "PhotoWatermark ${{ github.ref_name }}"
          fail_on_unmatched_files: false
          body: |
            版本说明（${{ github.ref_name }}）

            分发方式：
            - 未签名 DMG 分发，DMG 根目录包含：
              - `PhotoWatermark.app`

            安装与首次运行（“第一种方法”）：
            1. 下载 `PhotoWatermark-${{ github.ref_name }}-macos.dmg` 并双击打开。
            2. 将 `PhotoWatermark.app` 拖入 `Applications`。
            3. 打开“终端”，执行以下命令以一次性放行并启动：
               - `xattr -dr com.apple.quarantine "/Applications/PhotoWatermark.app"`
               - `chmod +x "/Applications/PhotoWatermark.app/Contents/MacOS/PhotoWatermark"`
               - `open "/Applications/PhotoWatermark.app"`

            备选放行方式：
            - Finder 右键 `PhotoWatermark.app` → 打开 → 弹窗再次“打开”。
            - 系统设置 → 隐私与安全性 → 允许打开未识别开发者应用。
            - 终端执行：`xattr -dr com.apple.quarantine "/Applications/PhotoWatermark.app"`。

            功能摘要（v3）：
            - 水印模板：自动恢复上次会话的水印设置与导出参数。
            - 参数持久化：边距、导出格式、命名规则、前/后缀、JPEG质量、尺寸模式与数值、导出目录路径。
            - 预览与导出一致：统一映射与布局逻辑，所见即所得。
            - 分发优化：DMG 提供未签名分发，并附带首次运行指南（一次性放行步骤）。
          files: |
            dist/PhotoWatermark-${{ github.ref_name }}-macos.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}